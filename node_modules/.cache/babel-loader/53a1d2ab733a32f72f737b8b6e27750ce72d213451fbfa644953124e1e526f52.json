{"ast":null,"code":"var _jsxFileName = \"/Users/chiraggoyal/Desktop/neurodiverse-application/src/pages/dyslexicStudentPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { FaCloudUploadAlt } from \"react-icons/fa\";\nimport \"../styles/dyslexia.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst backendUrl = \"http://192.168.29.110:5001\";\nfunction PdfToSummariser() {\n  _s();\n  const [pdfFile, setPdfFile] = useState(null);\n  const [uploadedFileName, setUploadedFileName] = useState(null);\n  const [output, setOutput] = useState(\"\");\n  const [isDragging, setIsDragging] = useState(false);\n  const [file, setFile] = useState(null);\n  const [summary, setSummary] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const uploadFile = async file => {\n    if (!file) {\n      alert(\"Please upload a PDF file first\");\n      return null;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const response = await axios.post(`${backendUrl}/upload`, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      if (response.data.fileName) {\n        setUploadedFileName(response.data.fileName);\n        return response.data.fileName;\n      } else {\n        alert(\"File uploaded but no file name received!\");\n        return null;\n      }\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n      alert(\"Failed to upload file.\");\n      return null;\n    }\n  };\n\n  // ✅ Convert PDF: Receives a Blob and allows downloading\n  const handlePdfConversion = async () => {\n    if (!uploadedFileName) return;\n    try {\n      // Fetching Blob response\n      const response = await axios.post(`${backendUrl}/generate-pdf`, {}, {\n        responseType: \"blob\" // Expecting binary data\n      });\n\n      // Ensure we receive a valid Blob\n      if (!response.data || response.data.size === 0) {\n        throw new Error(\"Received empty PDF file.\");\n      }\n\n      // Convert Blob to downloadable URL\n      const pdfBlob = new Blob([response.data], {\n        type: \"application/pdf\"\n      });\n      const blobUrl = URL.createObjectURL(pdfBlob);\n      setOutput(/*#__PURE__*/_jsxDEV(\"a\", {\n        href: blobUrl,\n        download: \"dyslexic_friendly.pdf\",\n        className: \"link\",\n        children: \"Click to download PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this));\n    } catch (error) {\n      console.error(\"Error converting to PDF:\", error);\n      alert(\"Failed to convert to PDF!\");\n    }\n  };\n\n  // ✅ Convert Audio: Receives a Blob and plays it\n  const handleAudioConversion = async () => {\n    if (!uploadedFileName) {\n      alert(\"No file selected!\");\n      return;\n    }\n    try {\n      setLoading(false);\n      const response = await axios.get(`${backendUrl}/text_to_speech?file_name=${uploadedFileName}`, {\n        responseType: \"blob\" // Ensure correct response format\n      });\n      if (!response.data || response.data.size === 0) {\n        throw new Error(\"Received an empty audio file.\");\n      }\n\n      // Convert Blob to URL for playback\n      const audioBlob = new Blob([response.data], {\n        type: \"audio/mpeg\"\n      });\n      const audioUrl = URL.createObjectURL(audioBlob);\n      setOutput(/*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        children: [/*#__PURE__*/_jsxDEV(\"source\", {\n          src: audioUrl,\n          type: \"audio/mpeg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), \"Your browser does not support the audio element.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this));\n      setL;\n    } catch (error) {\n      console.error(\"Error converting to audio:\", error);\n      alert(`Error: ${error.message}`);\n    }\n  };\n  const handleSummarization = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.post(\"http://192.168.29.110:5001/summarize\");\n      setSummary(response.data.summary);\n      // console.log(summary)\n      setOutput(/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"output-textarea auto-expand\",\n        readOnly: true,\n        value: summary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this));\n      setError(\"\");\n    } catch (err) {\n      console.error(\"Summarization error:\", err);\n      setError(\"Error summarizing the text.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleFileChange = async e => {\n    const file = e.target.files[0];\n    if (file && file.type === \"application/pdf\") {\n      setPdfFile(file);\n      setUploadedFileName(null); // Reset previous upload\n      await uploadFile(file);\n    } else {\n      alert(\"Please upload a valid PDF file.\");\n    }\n  };\n  const handleDrop = async e => {\n    e.preventDefault();\n    e.stopPropagation();\n    const file = e.dataTransfer.files[0];\n    if (file && file.type === \"application/pdf\") {\n      setPdfFile(file);\n      setUploadedFileName(null);\n      await uploadFile(file);\n    } else {\n      alert(\"Please drop a valid PDF file.\");\n    }\n    setIsDragging(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"PDF Summarizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Upload PDF:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `drop-area ${isDragging ? \"drag-active\" : \"\"} flex justify-center flex-col items-center`,\n        onDrop: handleDrop,\n        onDragOver: e => {\n          e.preventDefault();\n          setIsDragging(true);\n        },\n        onDragLeave: () => setIsDragging(false),\n        onClick: () => document.getElementById(\"fileInput\").click(),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"fileInput\",\n          type: \"file\",\n          accept: \"application/pdf\",\n          onChange: handleFileChange,\n          className: \"hidden-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FaCloudUploadAlt, {\n          size: 50,\n          className: \"upload-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"drop-text\",\n          children: [\"Drag & Drop your PDF here or \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"highlight\",\n            children: \"click to select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), pdfFile && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"selected-file\",\n        children: [\"Selected File: \", pdfFile.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePdfConversion,\n        className: \"convert-btn\",\n        children: \"Convert to PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAudioConversion,\n        className: \"convert-btn\",\n        children: \"Convert to Audio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSummarization,\n        className: \"convert-btn\",\n        children: \"Summarize\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), output && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"output-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"output-title\",\n        children: \"Output:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-blue-700 underline\",\n        children: output\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n}\n_s(PdfToSummariser, \"5wSe3ENaWrxLrlJxYpSlmupWI/Q=\");\n_c = PdfToSummariser;\nexport default PdfToSummariser;\nvar _c;\n$RefreshReg$(_c, \"PdfToSummariser\");","map":{"version":3,"names":["React","useState","axios","FaCloudUploadAlt","jsxDEV","_jsxDEV","backendUrl","PdfToSummariser","_s","pdfFile","setPdfFile","uploadedFileName","setUploadedFileName","output","setOutput","isDragging","setIsDragging","file","setFile","summary","setSummary","loading","setLoading","error","setError","uploadFile","alert","formData","FormData","append","response","post","headers","data","fileName","console","handlePdfConversion","responseType","size","Error","pdfBlob","Blob","type","blobUrl","URL","createObjectURL","href","download","className","children","_jsxFileName","lineNumber","columnNumber","handleAudioConversion","get","audioBlob","audioUrl","controls","src","setL","message","handleSummarization","readOnly","value","err","handleFileChange","e","target","files","handleDrop","preventDefault","stopPropagation","dataTransfer","onDrop","onDragOver","onDragLeave","onClick","document","getElementById","click","id","accept","onChange","name","_c","$RefreshReg$"],"sources":["/Users/chiraggoyal/Desktop/neurodiverse-application/src/pages/dyslexicStudentPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FaCloudUploadAlt } from \"react-icons/fa\";\r\nimport \"../styles/dyslexia.css\";\r\n\r\nconst backendUrl = \"http://192.168.29.110:5001\";\r\n\r\nfunction PdfToSummariser() {\r\n  const [pdfFile, setPdfFile] = useState(null);\r\n  const [uploadedFileName, setUploadedFileName] = useState(null);\r\n  const [output, setOutput] = useState(\"\");\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  \r\n    const [file, setFile] = useState(null);\r\n    const [summary, setSummary] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n\r\n  const uploadFile = async (file) => {\r\n    if (!file) {\r\n      alert(\"Please upload a PDF file first\");\r\n      return null;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n\r\n    try {\r\n      const response = await axios.post(`${backendUrl}/upload`, formData, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n\r\n      if (response.data.fileName) {\r\n        setUploadedFileName(response.data.fileName);\r\n        return response.data.fileName;\r\n      } else {\r\n        alert(\"File uploaded but no file name received!\");\r\n        return null;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error uploading file:\", error);\r\n      alert(\"Failed to upload file.\");\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // ✅ Convert PDF: Receives a Blob and allows downloading\r\n  const handlePdfConversion = async () => {\r\n    if (!uploadedFileName) return;\r\n    try {\r\n      \r\n      // Fetching Blob response\r\n      const response = await axios.post(`${backendUrl}/generate-pdf`, {}, {\r\n        responseType: \"blob\", // Expecting binary data\r\n      });\r\n  \r\n      // Ensure we receive a valid Blob\r\n      if (!response.data || response.data.size === 0) {\r\n        throw new Error(\"Received empty PDF file.\");\r\n      }\r\n  \r\n      // Convert Blob to downloadable URL\r\n      const pdfBlob = new Blob([response.data], { type: \"application/pdf\" });\r\n      const blobUrl = URL.createObjectURL(pdfBlob);\r\n  \r\n      setOutput(\r\n        <a href={blobUrl} download=\"dyslexic_friendly.pdf\" className=\"link\">\r\n          Click to download PDF\r\n        </a>\r\n      );\r\n  \r\n    } catch (error) {\r\n      console.error(\"Error converting to PDF:\", error);\r\n      alert(\"Failed to convert to PDF!\");\r\n    }\r\n  };\r\n\r\n  // ✅ Convert Audio: Receives a Blob and plays it\r\n  const handleAudioConversion = async () => {\r\n    if (!uploadedFileName) {\r\n      alert(\"No file selected!\");\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      setLoading(false);\r\n      const response = await axios.get(`${backendUrl}/text_to_speech?file_name=${uploadedFileName}`, {\r\n        responseType: \"blob\", // Ensure correct response format\r\n      });\r\n  \r\n      if (!response.data || response.data.size === 0) {\r\n        throw new Error(\"Received an empty audio file.\");\r\n      }\r\n  \r\n      // Convert Blob to URL for playback\r\n      const audioBlob = new Blob([response.data], { type: \"audio/mpeg\" });\r\n      const audioUrl = URL.createObjectURL(audioBlob);\r\n  \r\n      setOutput(\r\n        <audio controls>\r\n          <source src={audioUrl} type=\"audio/mpeg\" />\r\n          Your browser does not support the audio element.\r\n        </audio>\r\n      );\r\n      setL\r\n    } catch (error) {\r\n      console.error(\"Error converting to audio:\", error);\r\n      alert(`Error: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleSummarization = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(\"http://192.168.29.110:5001/summarize\");\r\n      setSummary(response.data.summary);\r\n      // console.log(summary)\r\n      setOutput(<textarea className=\"output-textarea auto-expand\" readOnly value={summary} />);\r\n      setError(\"\");\r\n    } catch (err) {\r\n      console.error(\"Summarization error:\", err);\r\n      setError(\"Error summarizing the text.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleFileChange = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (file && file.type === \"application/pdf\") {\r\n      setPdfFile(file);\r\n      setUploadedFileName(null); // Reset previous upload\r\n      await uploadFile(file);\r\n    } else {\r\n      alert(\"Please upload a valid PDF file.\");\r\n    }\r\n  };\r\n\r\n  const handleDrop = async (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    const file = e.dataTransfer.files[0];\r\n    if (file && file.type === \"application/pdf\") {\r\n      setPdfFile(file);\r\n      setUploadedFileName(null);\r\n      await uploadFile(file);\r\n    } else {\r\n      alert(\"Please drop a valid PDF file.\");\r\n    }\r\n    setIsDragging(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2 className=\"title\">PDF Summarizer</h2>\r\n      <div className=\"upload-section\">\r\n        <label className=\"label\">Upload PDF:</label>\r\n        <div\r\n          className={`drop-area ${isDragging ? \"drag-active\" : \"\"} flex justify-center flex-col items-center`}\r\n          onDrop={handleDrop}\r\n          onDragOver={(e) => { e.preventDefault(); setIsDragging(true); }}\r\n          onDragLeave={() => setIsDragging(false)}\r\n          onClick={() => document.getElementById(\"fileInput\").click()}\r\n        >\r\n          <input\r\n            id=\"fileInput\"\r\n            type=\"file\"\r\n            accept=\"application/pdf\"\r\n            onChange={handleFileChange}\r\n            className=\"hidden-input\"\r\n          />\r\n          <FaCloudUploadAlt size={50} className=\"upload-icon\" />\r\n          <p className=\"drop-text\">\r\n            Drag & Drop your PDF here or <span className=\"highlight\">click to select</span>\r\n          </p>\r\n        </div>\r\n        {pdfFile && <p className=\"selected-file\">Selected File: {pdfFile.name}</p>}\r\n      </div>\r\n      <div className=\"button-group\">\r\n        <button onClick={handlePdfConversion} className=\"convert-btn\">Convert to PDF</button>\r\n        <button onClick={handleAudioConversion} className=\"convert-btn\">Convert to Audio</button>\r\n        <button onClick={handleSummarization} className=\"convert-btn\">Summarize</button>\r\n      </div>\r\n      {output && (\r\n        <div className=\"output-section\">\r\n          <h3 className=\"output-title\">Output:</h3>\r\n          <div className=\"text-blue-700 underline\">{output}</div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PdfToSummariser;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}