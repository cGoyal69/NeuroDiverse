{"ast":null,"code":"var _jsxFileName = \"/Users/chiraggoyal/Desktop/neurodiverse-application/src/pages/quizTaker.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuizTaker({\n  chapterName,\n  updateStatus,\n  isQuizComplete,\n  quizStatus,\n  quizQuestion\n}) {\n  _s();\n  const navigate = useNavigate();\n  const questions = quizQuestion || [];\n  const [answers, setAnswers] = useState({});\n  const [score, setScore] = useState(null);\n  const [showRetake, setShowRetake] = useState(false);\n  const handleAnswerChange = (questionIndex, selectedOption) => {\n    setAnswers(prevAnswers => ({\n      ...prevAnswers,\n      [questionIndex]: selectedOption\n    }));\n  };\n  const handleSubmit = () => {\n    let finalScore = 0;\n    questions.forEach((q, index) => {\n      if (answers[index] === q.correct_answer) {\n        finalScore += 1;\n      }\n    });\n    const percentageScore = finalScore / questions.length * 100;\n    setScore(finalScore);\n    if (percentageScore >= 50) {\n      // If score is 50% or higher, update status and mark quiz as complete\n      updateStatus(prevStatus => ({\n        ...prevStatus,\n        [chapterName]: {\n          ...prevStatus[chapterName],\n          quizCompleted: true,\n          score: finalScore\n        }\n      }));\n      alert(`Quiz completed! Your score: ${finalScore} / ${questions.length}`);\n      isQuizComplete(true);\n      quizStatus(null);\n      navigate('/adhdLearningTool');\n    } else {\n      // If score is less than 50%, show \"Retake Quiz\" button\n      alert(`Your score is too low (${finalScore}/${questions.length}). Please retake the quiz.`);\n      setShowRetake(true);\n    }\n  };\n  const handleRetakeQuiz = () => {\n    setAnswers({});\n    setScore(null);\n    setShowRetake(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Quiz for \", chapterName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), questions.map((q, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"15px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: q.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), Object.entries(q.options).map(([key, option]) => /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: \"block\",\n          margin: \"5px 0\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: `question-${index}`,\n          value: key,\n          onChange: () => handleAnswerChange(index, key),\n          checked: answers[index] === key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this), option]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }, this))]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this)), !showRetake ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      disabled: Object.keys(answers).length < questions.length,\n      children: \"Submit Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRetakeQuiz,\n      children: \"Retake Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this), score !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your Score: \", score, \" / \", questions.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(QuizTaker, \"BubuAo/Po7tx+egkBWjW9640zNo=\", false, function () {\n  return [useNavigate];\n});\n_c = QuizTaker;\nexport default QuizTaker;\nvar _c;\n$RefreshReg$(_c, \"QuizTaker\");","map":{"version":3,"names":["useState","useNavigate","jsxDEV","_jsxDEV","QuizTaker","chapterName","updateStatus","isQuizComplete","quizStatus","quizQuestion","_s","navigate","questions","answers","setAnswers","score","setScore","showRetake","setShowRetake","handleAnswerChange","questionIndex","selectedOption","prevAnswers","handleSubmit","finalScore","forEach","q","index","correct_answer","percentageScore","length","prevStatus","quizCompleted","alert","handleRetakeQuiz","children","fileName","_jsxFileName","lineNumber","columnNumber","map","style","marginBottom","question","Object","entries","options","key","option","display","margin","type","name","value","onChange","checked","onClick","disabled","keys","_c","$RefreshReg$"],"sources":["/Users/chiraggoyal/Desktop/neurodiverse-application/src/pages/quizTaker.js"],"sourcesContent":["\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction QuizTaker({ chapterName, updateStatus, isQuizComplete, quizStatus ,quizQuestion}) {\r\n    const navigate = useNavigate();\r\n\r\n    \r\n\r\n    const questions = quizQuestion || [];\r\n    const [answers, setAnswers] = useState({});\r\n    const [score, setScore] = useState(null);\r\n    const [showRetake, setShowRetake] = useState(false);\r\n\r\n    const handleAnswerChange = (questionIndex, selectedOption) => {\r\n        setAnswers(prevAnswers => ({\r\n            ...prevAnswers,\r\n            [questionIndex]: selectedOption\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        let finalScore = 0;\r\n        questions.forEach((q, index) => {\r\n            if (answers[index] === q.correct_answer) {\r\n                finalScore += 1;\r\n            }\r\n        });\r\n\r\n        const percentageScore = (finalScore / questions.length) * 100;\r\n        setScore(finalScore);\r\n\r\n        if (percentageScore >= 50) {\r\n            // If score is 50% or higher, update status and mark quiz as complete\r\n            updateStatus(prevStatus => ({\r\n                ...prevStatus,\r\n                [chapterName]: {\r\n                    ...prevStatus[chapterName],\r\n                    quizCompleted: true,\r\n                    score: finalScore\r\n                }\r\n            }));\r\n\r\n            alert(`Quiz completed! Your score: ${finalScore} / ${questions.length}`);\r\n            isQuizComplete(true);\r\n            quizStatus(null);\r\n            navigate('/adhdLearningTool');\r\n        } else {\r\n            // If score is less than 50%, show \"Retake Quiz\" button\r\n            alert(`Your score is too low (${finalScore}/${questions.length}). Please retake the quiz.`);\r\n            setShowRetake(true);\r\n        }\r\n    };\r\n\r\n    const handleRetakeQuiz = () => {\r\n        setAnswers({});\r\n        setScore(null);\r\n        setShowRetake(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Quiz for {chapterName}</h2>\r\n            {questions.map((q, index) => (\r\n                <div key={index} style={{ marginBottom: \"15px\" }}>\r\n                    <p><strong>{q.question}</strong></p>\r\n                    {Object.entries(q.options).map(([key, option]) => (\r\n                        <label key={key} style={{ display: \"block\", margin: \"5px 0\" }}>\r\n                            <input\r\n                                type=\"radio\"\r\n                                name={`question-${index}`}\r\n                                value={key}\r\n                                onChange={() => handleAnswerChange(index, key)}\r\n                                checked={answers[index] === key}\r\n                            />\r\n                            {option}\r\n                        </label>\r\n                    ))}\r\n                </div>\r\n            ))}\r\n            {!showRetake ? (\r\n                <button onClick={handleSubmit} disabled={Object.keys(answers).length < questions.length}>\r\n                    Submit Quiz\r\n                </button>\r\n            ) : (\r\n                <button onClick={handleRetakeQuiz}>\r\n                    Retake Quiz\r\n                </button>\r\n            )}\r\n            {score !== null && <p>Your Score: {score} / {questions.length}</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default QuizTaker;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}