{"ast":null,"code":"var _jsxFileName = \"/Users/chiraggoyal/Desktop/neurodiverse-application/src/pages/chapterReader.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChapterReader({\n  isChapterComplete,\n  chapterName,\n  updateStatus,\n  chapterStatus,\n  chapterText\n}) {\n  _s();\n  const [showCompleteButton, setShowCompleteButton] = useState(false);\n  const navigate = useNavigate();\n  const contentRef = useRef(null);\n\n  // Mark chapter as complete\n  function markChapterComplete() {\n    updateStatus(prevStatus => ({\n      ...prevStatus,\n      [chapterName]: {\n        ...prevStatus[chapterName],\n        chapterCompleted: true\n      }\n    }));\n    isChapterComplete(true); // Notify parent that chapter is complete\n    chapterStatus(null); // Reset to show list\n    navigate('/adhdLearning');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"auto\",\n      overflowY: \"scroll\",\n      border: \"1px solid gray\",\n      padding: \"20px\"\n    },\n    ref: contentRef,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: chapterName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: chapterText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        height: \"auto\"\n      },\n      children: [\" \", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: markChapterComplete,\n      style: {\n        marginTop: \"10px\",\n        padding: \"10px\",\n        cursor: \"pointer\"\n      },\n      children: \"\\u2705 Mark Chapter as Complete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(ChapterReader, \"DRJmEYmRP5K8R8tH54tULOCWnjk=\", false, function () {\n  return [useNavigate];\n});\n_c = ChapterReader;\nexport default ChapterReader;\nvar _c;\n$RefreshReg$(_c, \"ChapterReader\");","map":{"version":3,"names":["useState","useRef","useNavigate","jsxDEV","_jsxDEV","ChapterReader","isChapterComplete","chapterName","updateStatus","chapterStatus","chapterText","_s","showCompleteButton","setShowCompleteButton","navigate","contentRef","markChapterComplete","prevStatus","chapterCompleted","style","height","overflowY","border","padding","ref","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","marginTop","cursor","_c","$RefreshReg$"],"sources":["/Users/chiraggoyal/Desktop/neurodiverse-application/src/pages/chapterReader.js"],"sourcesContent":["import { useState, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction ChapterReader({ isChapterComplete, chapterName, updateStatus, chapterStatus, chapterText}) {\r\n    const [showCompleteButton, setShowCompleteButton] = useState(false);\r\n    const navigate=useNavigate();\r\n    const contentRef = useRef(null);\r\n\r\n   \r\n\r\n    // Mark chapter as complete\r\n    function markChapterComplete() {\r\n        updateStatus(prevStatus => ({\r\n            ...prevStatus,\r\n            [chapterName]: { ...prevStatus[chapterName], chapterCompleted: true }\r\n        }));\r\n\r\n        isChapterComplete(true); // Notify parent that chapter is complete\r\n        chapterStatus(null); // Reset to show list\r\n        navigate('/adhdLearning');\r\n    }\r\n\r\n    return (\r\n        <div style={{ height: \"auto\", overflowY: \"scroll\", border: \"1px solid gray\", padding: \"20px\" }} ref={contentRef}>\r\n            <h2>{chapterName}</h2>\r\n            <p>\r\n                {/* Simulating long content */}\r\n                {chapterText}\r\n                {/* Repeat the paragraph multiple times */}\r\n            </p>\r\n            <p style={{ height:\"auto\"}}> {/* Simulated long scroll content */} </p>\r\n\r\n            \r\n                <button onClick={markChapterComplete} style={{ marginTop: \"10px\", padding: \"10px\", cursor: \"pointer\" }}>\r\n                    âœ… Mark Chapter as Complete\r\n                </button>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChapterReader;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,aAAaA,CAAC;EAAEC,iBAAiB;EAAEC,WAAW;EAAEC,YAAY;EAAEC,aAAa;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EAChG,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAMc,QAAQ,GAACZ,WAAW,CAAC,CAAC;EAC5B,MAAMa,UAAU,GAAGd,MAAM,CAAC,IAAI,CAAC;;EAI/B;EACA,SAASe,mBAAmBA,CAAA,EAAG;IAC3BR,YAAY,CAACS,UAAU,KAAK;MACxB,GAAGA,UAAU;MACb,CAACV,WAAW,GAAG;QAAE,GAAGU,UAAU,CAACV,WAAW,CAAC;QAAEW,gBAAgB,EAAE;MAAK;IACxE,CAAC,CAAC,CAAC;IAEHZ,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;IACzBG,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;IACrBK,QAAQ,CAAC,eAAe,CAAC;EAC7B;EAEA,oBACIV,OAAA;IAAKe,KAAK,EAAE;MAAEC,MAAM,EAAE,MAAM;MAAEC,SAAS,EAAE,QAAQ;MAAEC,MAAM,EAAE,gBAAgB;MAAEC,OAAO,EAAE;IAAO,CAAE;IAACC,GAAG,EAAET,UAAW;IAAAU,QAAA,gBAC5GrB,OAAA;MAAAqB,QAAA,EAAKlB;IAAW;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtBzB,OAAA;MAAAqB,QAAA,EAEKf;IAAW;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEb,CAAC,eACJzB,OAAA;MAAGe,KAAK,EAAE;QAAEC,MAAM,EAAC;MAAM,CAAE;MAAAK,QAAA,GAAC,GAAC,EAAqC,GAAC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAGnEzB,OAAA;MAAQ0B,OAAO,EAAEd,mBAAoB;MAACG,KAAK,EAAE;QAAEY,SAAS,EAAE,MAAM;QAAER,OAAO,EAAE,MAAM;QAAES,MAAM,EAAE;MAAU,CAAE;MAAAP,QAAA,EAAC;IAExG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEZ,CAAC;AAEd;AAAClB,EAAA,CApCQN,aAAa;EAAA,QAEHH,WAAW;AAAA;AAAA+B,EAAA,GAFrB5B,aAAa;AAsCtB,eAAeA,aAAa;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}